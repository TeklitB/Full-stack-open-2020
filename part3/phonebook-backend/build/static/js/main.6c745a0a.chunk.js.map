{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","components/SinglePerson.js","services/book.js","components/Notification.js","App.js","index.js"],"names":["Persons","person","deleteContact","name","number","onClick","Filter","searchName","setSearchName","value","onChange","event","target","PersonForm","newName","handleNewName","newNumber","handleNewNumber","addName","onSubmit","type","SinglePerson","searchResult","persons","filter","toLowerCase","startsWith","length","map","result","key","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","successMessage","message","className","App","useState","setPersons","setNewName","setNewNumber","setSuccessMessage","errorMessage","setErrorMessage","useEffect","bookServices","initialNotes","preventDefault","found","find","foundPerson","window","confirm","changeNumber","retNumber","setTimeout","catch","error","console","log","n","returnedName","concat","deletePerson","returnedPerson","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c745a0a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = ({ person, deleteContact }) => {\n    return (\n        <p>{person.name} {person.number}\n            <button onClick={deleteContact}>Delete</button>\n        </p>\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({ searchName, setSearchName }) => {\n\n    const handleSearchName = (event) => {\n        setSearchName(event.target.value)\n    }\n    return (\n        <div>\n            <form>\n                <div>\n                    Filter shown with: <input value={searchName} onChange={handleSearchName} />\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ newName, handleNewName, newNumber, handleNewNumber, addName }) => {\n\n    return (\n        <div>\n            <form onSubmit={addName}>\n                <div>\n                    Name: <input value={newName} onChange={handleNewName} />\n                </div>\n                <div>\n                    Number: <input value={newNumber} onChange={handleNewNumber} />\n                </div>\n                <div>\n                    <button type=\"submit\">add</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst SinglePerson = ({ searchName, persons }) => {\n\n    const searchResult = persons.filter(person =>\n        person.name.toLowerCase().startsWith(searchName.toLowerCase())\n    )\n    if (searchName === '') {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n    else if (searchResult.length > 0) {\n        return (\n            <div>\n                <h2>Search Result</h2>\n                {searchResult.map(result =>\n                    <p key={result.name}>{result.name} {result.number}</p>\n                )}\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <h2>Search Result</h2>\n                <p>No result is found.</p>\n            </div>\n        )\n    }\n\n}\n\nexport default SinglePerson","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => {\n        return response.data\n    })\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteP = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\nexport default {\n    getAll: getAll,\n    create: create,\n    update: update,\n    deleteP: deleteP\n}","import React from 'react'\n\nconst Notification = ({ successMessage, message }) => {\n    if (!message && !successMessage) {\n        return null\n    } else if (successMessage) {\n        return (\n            <div className=\"success\">\n                {successMessage}\n            </div>\n        )\n    } else if (message) {\n        return (\n            <div className=\"error\">\n                {message}\n            </div>\n        )\n    }\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport SinglePerson from './components/SinglePerson'\nimport bookServices from './services/book'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [searchName, setSearchName] = useState('')\n    const [successMessage, setSuccessMessage] = useState('')\n    const [errorMessage, setErrorMessage] = useState('')\n\n    useEffect(() => {\n        bookServices\n            .getAll()\n            .then(initialNotes => {\n                setPersons(initialNotes)\n            })\n    }, [])\n\n    const addName = (event) => {\n        event.preventDefault();\n\n        const found = persons.find(person => person.name === newName)\n        const foundPerson = persons.find(person => person.name === newName)\n\n        if (found) {\n            const id = foundPerson.id\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                const changeNumber = { ...foundPerson, number: newNumber }\n                bookServices\n                    .update(id, changeNumber)\n                    .then(retNumber => {\n                        setPersons(persons.map(person => person.name !== newName ? person : retNumber))\n                        setSuccessMessage(\n                            `${newName}'s number updated.`\n                        )\n                        setTimeout(() => {\n                            setSuccessMessage(null)\n                        }, 5000)\n                        setNewName('')\n                        setNewNumber('')\n                    })\n                    .catch(error => {\n                        console.log(error)\n                        setErrorMessage(\n                            `Information of '${newName}' has already been removed from server`\n                        )\n                        setTimeout(() => {\n                            setErrorMessage('')\n                        }, 5000)\n                        setPersons(persons.filter(n => n.id !== id))\n                        setNewName('')\n                        setNewNumber('')\n                    })\n            }\n\n        } else {\n            const nameObject = {\n                name: newName,\n                number: newNumber\n            }\n            bookServices\n                .create(nameObject)\n                .then(returnedName => {\n                    setPersons(persons.concat(returnedName))\n                    setSuccessMessage(\n                        `Added '${newName}'`\n                    )\n                    setTimeout(() => {\n                        setSuccessMessage('')\n                    }, 5000)\n                    setNewName('')\n                    setNewNumber('')\n                })\n        }\n    }\n    const handleNewName = (event) => {\n        //console.log(event.target.value)\n        setNewName(event.target.value)\n    }\n\n    const handleNewNumber = (event) => {\n        //console.log(event.target.value)\n        setNewNumber(event.target.value)\n    }\n\n    const deleteContact = id => {\n        const deletePerson = persons.find(n => n.id === id)\n\n        if (window.confirm(`Delete '${deletePerson.name}'?`)) {\n            bookServices\n                .deleteP(id)\n                .then(returnedPerson => {\n                    setPersons(persons.filter(person => person.id !== id))\n                    //console.log(returnedPerson)\n                })\n                .catch(error => {\n                    alert(\n                        ` '${deletePerson.name}' was already deleted`\n                    )\n                })\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification successMessage={successMessage} message={errorMessage} />\n            <Filter searchName={searchName} setSearchName={setSearchName} />\n            <SinglePerson searchName={searchName} persons={persons} />\n            <h2>Add a new</h2>\n            <PersonForm newName={newName} handleNewName={handleNewName}\n                newNumber={newNumber} handleNewNumber={handleNewNumber}\n                addName={addName}\n            />\n            <h2>Numbers</h2>\n            {persons.map(person => <Persons key={person.name} person={person}\n                deleteContact={() => deleteContact(person.id)} />\n            )}\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}